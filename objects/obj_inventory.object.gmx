<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create the item list (and enums)

enum i_type {
    i_normal,
    i_consumable,
    i_weapon,
    i_quest
}

enum items_list_index {
    ID,
    name,
    type,
    usable,
    description,
    // Weapon stats
    level, // Player must have this level before being able to equip this, if this is a weapon
    attack_bonus,
    defense_bonus,
    speed_bonus,
    stat4_bonus
}

global.items_list[0] = -1;

scr_createitem("Weird Bloc", i_type.i_normal, false, "You don't know how to feel about this object...");
scr_createitem("Debug Sword", i_type.i_weapon, true, "Legends say the developper of this game HIMSELF used this sword to create this game.", 1, 15,0,0,0);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize inventory objects
width = 10;
height = 5;
box_size = 32;
draw_set_font(fnt_txt);

//Create the ds grids
// Items
box = ds_grid_create(width, height);
ds_grid_clear(box, -1);

// Item count
count = ds_grid_create(width, height);
ds_grid_clear(count, 0);

scr_inv_pickupitem(0);
scr_inv_pickupitem(0);
scr_inv_pickupitem(1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="54">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Remove a random item to the inventory
var gx = x_to_gx(mouse_x);
var gy = y_to_gy(mouse_y);

if (gx == median(0, gx, obj_inventory.width - 1)
&amp;&amp; gy == median(0, gy, obj_inventory.height - 1)
&amp;&amp; count[# gx, gy] &gt; 0) {
    scr_inv_removeitem(gx, gy);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Add a random item to the inventory
var gx = x_to_gx(mouse_x);
var gy = y_to_gy(mouse_y);
var itemToAdd = choose(0, 1);

if (gx == median(0, gx, obj_inventory.width - 1)
&amp;&amp; gy == median(0, gy, obj_inventory.height - 1)) {
    scr_inv_additem(gx, gy, itemToAdd);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the inventory

for (tmp_y = 0; tmp_y &lt; height; tmp_y++)
{
    for (tmp_x = 0; tmp_x &lt; width; tmp_x++)
    {
        var dx = x + (tmp_x * box_size);
        var dy = y + (tmp_y * box_size);
        draw_sprite(spr_slot, 0, dx, dy);
        if (count[# tmp_x, tmp_y] &gt; 0) {
            draw_sprite(spr_items, box[# tmp_x, tmp_y], dx, dy);
            if (!item_is_weapon(box[# tmp_x, tmp_y]))
            { // Draw the number circle ONLY if current item isn't a weapon
                draw_set_colour(c_white);
                if (count[# tmp_x, tmp_y] &gt; 9)
                    draw_text_outline(dx - 4, dy - 8, count[# tmp_x, tmp_y], 2, c_black, 8);
                else
                    draw_text_outline(dx - 1, dy - 8, count[# tmp_x, tmp_y], 2, c_black, 8);
                draw_set_colour(c_black);
                //draw_circle_colour(dx, dy - 2, 6, c_white, c_white, false);
                //draw_text_colour(dx - 3, dy - 8, count[# tmp_x, tmp_y], 0,0,0,0,1);
                //draw_text(dx - 1, dy - 8, count[# tmp_x, tmp_y]);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
